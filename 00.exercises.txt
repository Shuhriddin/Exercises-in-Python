+ 1. Переворачивание букв в словах: Введите текст, и программа перевернет буквы в каждом слове, сохранив порядок слов. Пример: "hello world" => "olleh dlrow"

+ 2. Генерация ряда Фибоначчи: Введите число n, и программа сгенерирует ряд Фибоначчи из n чисел. Пример: 5 => [0, 1, 1, 2, 3]

+ 3. Преобразование чисел в слова: Введите число, и программа вернет его текстовое представление. Пример: 123 => "сто двадцать три"

+ 4. Проверка анаграмм: Программа принимает два слова и проверяет, являются ли они анаграммами. Пример: "listen" и "silent" являются анаграммами.

+ 5. Определение палиндрома: Программа проверяет, является ли введенное слово или число палиндромом (читается одинаково в обоих направлениях). Пример: "radar" или 121 => палиндром.

+ 6. Подсчет слов в тексте: Программа считает, сколько раз каждое слово встречается в тексте. Пример: "hello world hello" => {"hello": 2, "world": 1}

+ 7. Переворачивание числа: Программа принимает число и возвращает его в обратном порядке. Пример: 12345 => 54321

+ 8. Подсчет гласных и согласных: Программа считает количество гласных (а, е, и, о, у) и согласных букв в введенном слове.

+ 9. Задача "FizzBuzz" на Python: Выведите числа от 1 до 100, заменяя числа, кратные 3, на "Fizz", числа, кратные 5, на "Buzz", а кратные 3 и 5 одновременно — на "FizzBuzz".

+ 10. Подсчет пробелов в тексте: Программа считает, сколько пробелов содержится в тексте.

== PART SECOND ==

+ 11. Сортировка слов по алфавиту: Отсортируйте слова в строке, введённой пользователем, по алфавиту и верните результат. Пример:

    input: "hello from the other side"
    output: "from hello other side the"

+ 12. Проверка числа Армстронга:
    Проверьте, является ли введённое пользователем число числом Армстронга. (Число Армстронга — это число, равное сумме кубов его цифр.) Пример:

    input: 153
    output: True
    (153 = 1³ + 5³ + 3³)

+ 13. Подсчёт количества букв:
    Посчитайте количество каждой буквы в строке, введённой пользователем. Пример:
    input: "hello world"
    output: {"h": 1, "e": 1, "l": 3, "o": 2, "w": 1, "r": 1, "d": 1}

+ 14. Удаление повторяющихся слов:
    Удалите повторяющиеся слова в строке, оставив только одно вхождение каждого. Пример:
    input: "this is is a test test"
    output: "this is a test"

+ 15. Нахождение максимального числа:
    Напишите программу, которая находит самое большое число в последовательности чисел, введённых пользователем. Пример:
    input: [3, 5, 7, 2, 8]
    output: 8

+ 16. Преобразование букв в числа:
    Замените буквы в строке их ASCII кодами. Пример:
    input: "abc"
    output: [97, 98, 99]

+ 17. Выделение составных чисел:
    Найдите все составные числа в данной последовательности чисел и верните их в виде списка. (Составные числа — это числа, которые не являются простыми.) Пример:
    input: [4, 5, 6, 7, 8]
    output: [4, 6, 8]

+ 18. Подсчёт палиндромов:
    Определите, сколько палиндромов содержится в строке, введённой пользователем. Пример:
    input: "radar level kayak racecar"
    output: 4

19. Проверка баланса скобок:
    Проверьте, сбалансированы ли открытые и закрытые скобки ((), [], {}) в строке, введённой пользователем. Пример:
    input: "(a + b) * (c / d)"
    output: True

+ 20. Сортировка чисел по убыванию:
    Отсортируйте числа в списке в порядке убывания. Пример:
    input: [1, 5, 3, 2, 8, 6]
    output: [8, 6, 5, 3, 2, 1]









- 1 -
Matn ichidagi harflarni teskari qilish:
Matnni kiriting va har bir so'zning ichidagi harflarni teskari qilib, so'zlarning o'rnini saqlab qoling.
Masalan: "hello world" => "olleh dlrow"
Fibonacci qatorini hosil qilish:

- 2 -
Foydalanuvchidan n sonini kiriting, va shu son miqdoridagi Fibonacci qatorini hosil qiling.
Masalan: 5 => [0, 1, 1, 2, 3]
Raqamlarni so'z bilan yozish:

- 3 -
Foydalanuvchi kiritgan raqamni (masalan, 123) matn ko'rinishida qaytaring (masalan: "bir yuz yigirma uch").
Anagram tekshirish:

- 4 -
Ikki so'zni qabul qilib, ularning anagram bo'lish-bo'lmasligini aniqlaydigan funksiya yozing (masalan, "listen" va "silent" anagramlar hisoblanadi).
Palindromni aniqlash:

- 5 -
Foydalanuvchi kiritgan so'z yoki raqam palindrom (teskari o'qiganda ham bir xil) bo'lish-bo'lmasligini aniqlaydigan dastur yozing.
Masalan: "radar" yoki 121 => palindrom.

- 6 -
Matn ichidan so'zlarni sanash:
Matndan har bir so'z qanchalik ko'p takrorlanganini aniqlaydigan dastur yozing.
Masalan: "hello world hello" => {"hello": 2, "world": 1}
Sonlarni teskari aylantirish:

- 7 -
Foydalanuvchi kiritgan raqamni teskari qilib qaytaradigan funksiya yozing.
Masalan: 12345 => 54321

- 8 -
So'z ichidagi unli va undosh harflarni sanash:
Foydalanuvchi kiritgan so'z ichidagi unli (a, e, i, o, u) va undosh harflar sonini aniqlaydigan dastur yozing.

- 9 -
Pythonda "FizzBuzz" muammosi:
1 dan 100 gacha bo'lgan sonlar ichida 3 ga bo'linadigan sonlarni "Fizz", 5 ga bo'linadiganlarini "Buzz" deb, 3 va 5 ga bo'linadigan sonlarni esa "FizzBuzz" deb chiqaring.
Matn ichidagi bo'shliqlarni hisoblash:

- 10 -
Matnda nechta bo'shliq (space) borligini hisoblab beruvchi dastur yozing.

# PART 2

- 11 -
 So‘zlarni alfavit bo‘yicha tartiblash:
Foydalanuvchi kiritgan jumladagi so‘zlarni alfavit bo‘yicha tartiblash va natijani qaytarish. Misol:

input: "hello from the other side"
output: "from hello other side the"

- 12 -
Armstrong sonini tekshirish:
Foydalanuvchi kiritgan son Armstrong soni ekanligini tekshirish. (Armstrong soni o‘z raqamlarining kublari yig‘indisiga teng bo‘lgan son.) Misol:

input: 153
output: True
(153 = 1³ + 5³ + 3³)

- 13 -
Harflar sonini hisoblash:
Foydalanuvchi kiritgan matndagi harflar sonini hisoblang. Har bir harfning nechta borligini aniqlang. Misol:

input: "hello world"
output: {"h": 1, "e": 1, "l": 3, "o": 2, "w": 1, "r": 1, "d": 1}

- 14 -
Takrorlanadigan so‘zlarni o‘chirish:
Foydalanuvchi kiritgan matnda takrorlanadigan so‘zlarni bir marta qoldirib, qolganlarini o‘chirish. Misol:

input: "this is is a test test"
output: "this is a test"

- 15 -
Raqamlar orasidagi eng katta raqamni topish:
Foydalanuvchi kiritgan raqamlar qatoridagi eng kattasini aniqlaydigan dastur yozing. Misol:

input: [3, 5, 7, 2, 8]
output: 8

- 16 -
Harflarni raqamlarga aylantirish:
Matndagi harflarni ASCII kodlari bilan almashtiring. Misol:

input: "abc"
output: [97, 98, 99]

- 17 -
Murakkab sonlarni ajratish:
Berilgan son qatoridagi barcha murakkab sonlarni ajratib olib, ularning ro‘yxatini qaytaring. (Murakkab sonlar — tub bo‘lmagan sonlar.) Misol:

input: [4, 5, 6, 7, 8]
output: [4, 6, 8]

- 18 - 
Palindromlar sonini aniqlash:
Foydalanuvchi kiritgan matndagi so‘zlardan nechta palindrom so‘z borligini aniqlang. Misol:

input: "radar level kayak racecar"
output: 4

- 19 -
Matnda qavslarning muvozanatini tekshirish:
Berilgan stringda ochilgan va yopilgan qavslar ((), [], {}) muvozanatli ekanligini tekshiring. Misol:

input: "(a + b) * (c / d)"
output: True

- 20 -
Sonlarni ortma-ort tartibda ajratish:
Berilgan ro‘yxatdagi sonlarni ortma-ort tartibda qaytaradigan dastur yozing. Misol:

input: [1, 5, 3, 2, 8, 6]
output: [8, 6, 5, 3, 2, 1]